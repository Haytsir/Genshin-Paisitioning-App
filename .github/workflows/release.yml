name: "Release"

permissions:
  contents: "write"

# Action 발동 조건: version tag 생성시
#on:
#  push:
#    branches:
#      - master
on:
  workflow_dispatch
  
# Action 실행
jobs:
  # Release 생성
  create_release:
    if: github.ref == 'refs/heads/master'
    # Action 실행 환경: ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      # Action 실행전에 필요한 작업
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - run: git fetch --all --tags
      # 2. Check Release Version
      - name: Check Release Version
        id: version_check
        uses: thebongy/version-check@v1
        with:
          file: Cargo.toml
          tagFormat: v${version}
      # 3. Release 생성
      - name: create release
        if: ${{ steps.version_check.outputs.versionChanged }} == true
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.version_check.outputs.releaseVersion }}
          name: Release ${{ steps.version_check.outputs.releaseVersion }}
          draft: false
          prerelease: false
    outputs:
      versionChanged: ${{ steps.version_check.outputs.versionChanged }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
  # Release에 Asset 업로드
  upload_release_asset:
    # Action 실행 환경: windows-latest
    needs: create_release
    runs-on: windows-latest
    if: ${{ needs.create_release.outputs.versionChanged }}
    # Action 실행 작업들
    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
      # 2. Install Rust
      - name: Install Rust
        run: rustup toolchain install stable --profile minimal
      # 3. Set up cargo cache
      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2
        continue-on-error: false
      # 4. Build Rust Proeject as Release
      - name: Build project
        run: cargo build --release --locked
      # 5. Compress Builded File
      - name: compress
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: "zip"
          filename: "genshin_paisitioning_app.zip"
          path: "./target/release/genshin_paisitioning_app.exe"
      # 6. Upload Release Asset
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: genshin_paisitioning_app.zip
